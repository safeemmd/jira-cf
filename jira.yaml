AWSTemplateFormatVersion: 2010-09-09
Description: "Confluence Cloudformation stack"
Parameters: 
  VPCID:
    Type: String
  Subnet:
    Type: List<String>
  AppInstancePort:
    Description: "Application port used within the instance (Note: This is not the ALB public port)"
    Type: Number
    Default: 8090
  AMIID:
    Type: String
    Default: ami-000e7ce4dd68e7a11
  InstanceTypeParam:
    Type: String
    Default: t2.medium
Resources:
  ConfluenceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ConfluenceSecurityGroup
      GroupDescription: 'Confluence Security group provisioned through cloudformation'
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8090
          ToPort: 8090
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
      Tags:
        - Key: Name
          Value: Confluence-Security-group
  ConfluenceLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    DependsOn:
      - ConfluenceSecurityGroup
    Properties:
      LaunchConfigurationName: ConfluenceLaunchConfiguration
      AssociatePublicIpAddress: true
      ImageId: !Ref AMIID
      InstanceType: !Ref InstanceTypeParam
    #  IamInstanceProfile: !Ref InstanceProfile
      KeyName: atlassian-jira
      SecurityGroups:
        - !Ref ConfluenceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeType: "gp2"
            VolumeSize: 20
            DeleteOnTermination: true
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash -x

          # Ensure sshd nobody user can curl
          setsebool -P authlogin_yubikey 1

          # Install basic dependencies
          yum install -y epel-release
          # yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine
          
          # Install Docker
          yum update -y
          cd /tmp/
          curl https://download.docker.com/linux/centos/8/x86_64/stable/Packages/containerd.io-1.3.7-3.1.el8.x86_64.rpm -o containerd.rpm
          curl https://download.docker.com/linux/centos/8/x86_64/stable/Packages/docker-ce-19.03.13-3.el8.x86_64.rpm -o docker-ce.rpm
          curl https://download.docker.com/linux/centos/8/x86_64/stable/Packages/docker-ce-cli-19.03.13-3.el8.x86_64.rpm -o docker-cli.rpm
          yum install -y containerd.rpm
          yum install -y *.rpm

          yum install -y firewalld python3-pip xmlstarlet
          pip3 install awscli
          curl -o /tmp/cfn.tar.gz https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
          cd /tmp
          tar zxf /tmp/cfn.tar.gz
          cd /tmp/aws-cfn*
          python3 setup.py build
          python3 setup.py install

          # Prepare firewall
          #firewall-offline-cmd  --zone=public --add-port=${AppInstancePort}/tcp --add-port=22/tcp
          #systemctl enable firewalld.service
          #systemctl start firewalld.service

          # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-init.html
          # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-init.html
          /usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource ConfluenceLaunchConfiguration --configsets default --region ${AWS::Region}

          # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-signal.html
          /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ConfluenceLaunchConfiguration --region ${AWS::Region}
          sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
          sudo systemctl start docker
    Metadata:
      "AWS::CloudFormation::Init":
        configSets:
          default:
            - docker-setup
        docker-setup:
          files:
            "/opt/docker-compose.yml":
              content: |
                version: '3.7'
                services:
                    confluence:
                        image: atlassian/confluence-server:latest
                        container_name: confluence
                        restart: always
                        volumes:
                          - /var/atlassian/application-data/confluence:/var/atlassian/application-data/confluence
                          - atlassianvolume:/opt/atlassian
                        ports:
                          - "8090:8090"
                        environment:
                          - SET_PERMISSIONS=true

                volumes:
                    atlassianvolume:
              mode: "000755"
              user: centos
              group: centos
        commands:
          "docker_compose_run":
            command: "docker-compose up -d"
            cwd: "/opt"
  ConfluenceAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AutoScalingGroupName: ConfluenceAutoScalingGroup
      LaunchConfigurationName: !Ref ConfluenceLaunchConfiguration
      Cooldown: '300'
      DesiredCapacity: '1'
      HealthCheckGracePeriod: '600'
      HealthCheckType: EC2
      MaxSize: 1
      MinSize: 0
      Tags:
        - Key: Name
          Value: Confluence-instance
          PropagateAtLaunch: true
      VPCZoneIdentifier: !Ref Subnet
